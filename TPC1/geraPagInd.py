import os, re
from pathlib import Path
from lxml import etree

antigas_path =  'MapaRuas-materialBase/MapaRuas-materialBase/imagem/'
novas_path =    'MapaRuas-materialBase/MapaRuas-materialBase/atual/'
texto_path =    'MapaRuas-materialBase/MapaRuas-materialBase/texto/'

dirFiles = os.listdir(novas_path) # lista dos ficheiros novos

# changing all file extensions to lower case
directory_path = Path(antigas_path)

for file_path in directory_path.iterdir(): # colocar a diretoria de forma a que seja possivel iterar sobre os seus conteudos
    if file_path.suffix.lower() != file_path.suffix:
        new_file_name = f"{file_path.stem}{file_path.suffix.lower()}"
        new_file_path = directory_path / new_file_name # concatenar o path e o ficheiro
        file_path.rename(new_file_path)

# parsing the xml text files
for nome_arquivo in os.listdir(texto_path):
    caminho_arquivo = os.path.join(texto_path, nome_arquivo)
    parser = etree.XMLParser()
    tree = etree.parse(caminho_arquivo, parser)
    root = tree.getroot()
    numero = root.find('meta/número').text # .text -> used to access the text content of an XML element
    nome = root.find('meta/nome').text

    f = open('ruasSite/' + numero + '.html','w+', encoding='utf-8')

    preHTML = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <title>Ruas de Braga</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="w3.css">
        <meta charset="utf-8"/>
    </head>
    <body>
        <div class="w3-card-4">
            <header class="w3-container w3-green">
                <h3>Rua: {nome}</h3>
            </header>
        </div>
    """

    posHTML = f"""
        <div>
            <footer class="w3-container w3-green">
                <h2>
                    <a href="index.html">
                    Voltar para a página principal</a>
                </h2>
                <h5>Generated by RuasDeBraga::EngWeb2024::A96351</h5>
            </footer>
        </div>
    </body>
    </html>
    """

    conteudo = ""

    conteudo += "<div class='w3-container'><h2>Descrição</h2><table class='w3-table w3-striped'>"
    for para in root.findall('corpo/para'):
        text = ""
        for part in para.itertext():    # separa o texto dentro de cada tag "para"
            text += part.strip() + " "  # junta todo o texto separado, coloca um espaço
        conteudo += "<p>{}</p>".format(text.strip()) # strip -> removes any leading, and trailing whitespaces

    conteudo += "<div class='w3-container'><h2>Lista de Casas</h2><table class='w3-table w3-striped'>"
    conteudo += "<tr><th>Número</th><th>Enfiteuta</th><th>Foro</th><th>Descrição</th><th>Lugar</th></tr>"
    for casa in root.findall('corpo/lista-casas/casa'):
        numero_casa = casa.find('número').text
        enfiteuta = casa.find('enfiteuta').text if casa.find('enfiteuta') is not None else "N.A."
        foro = casa.find('foro').text if casa.find('foro') is not None else "N.A."
        desc = ""
        if casa.find('desc/para') is not None:
            for part in casa.find('desc/para').itertext():
                desc += part.strip() + " "
        else:
            desc = "N.A."
        lugar = ""
        if casa.find('desc/para/lugar') is not None:
            lugar = casa.find('desc/para/lugar').text
        else:
            lugar = "N.A."

        conteudo += "<tr>"
        conteudo += "<td>{}</td>".format(numero_casa)
        conteudo += "<td>{}</td>".format(enfiteuta)
        conteudo += "<td>{}</td>".format(foro)
        conteudo += "<td>{}</td>".format(desc)
        conteudo += "<td>{}</td>".format(lugar)
        conteudo += "</tr>"
        conteudo += "<tr><td colspan='5'><hr></td></tr>"

    conteudo += "</table>"
      
    imagens_antigas = []
    imagens_novas = []
    legendas = []
    
    for figura in root.findall('corpo/figura'):
        imagem = figura.find('imagem')
        imagens_antigas.append(imagem.get('path')[10:]) # passa os primeiros 10 caracteres à frente
        legenda = figura.find('legenda')
        legendas.append(legenda.text)
    
    # modify the paths in the xml to lower case to match the correspondent files in the pictures folder
    modified_imagens_antigas = []
    for filename in imagens_antigas:
        path_obj = Path(filename)
        modified_filename = f"{path_obj.stem}{path_obj.suffix.lower()}"
        modified_imagens_antigas.append(modified_filename)
    
    imagens_antigas = modified_imagens_antigas

    pattern = rf'^{numero}-.*$'
    
    # match the correspondent pictures
    matched_files = []
    for file in dirFiles:
        if re.match(pattern, file):
            matched_files.append(file)

    imagens_novas = matched_files
    
    for img, legenda in zip(imagens_antigas,legendas):
        conteudo += f"""
            <div class="w3-container w3-teal">
                <h1>{nome}</h1>
                <figcaption>{legenda}</figcaption>
            </div>
            <img src="{'../' + antigas_path + img}" alt="{legenda}" style="width:100%">  
        """

    for img, legenda in zip(imagens_novas, legendas):
        conteudo += f"""
            <div class="w3-container w3-teal">
                <h1>{nome}</h1>
                <figcaption>{legenda}</figcaption>
            </div>
            <img src="{'../' + novas_path + img}" alt="{legenda}" style="width:100%">
        """

    f.write(preHTML + conteudo + posHTML)